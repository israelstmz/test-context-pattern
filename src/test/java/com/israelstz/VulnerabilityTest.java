package com.israelstz;

import com.israelstz.helpers.TestContext;
import com.israelstz.helpers.TestContextExtension;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

import static com.israelstz.helpers.TestContext.*;

@ExtendWith(TestContextExtension.class)
@DisplayName("Vulnerabilities scan")
class VulnerabilityTest {

    private TestContext context;

    @BeforeEach
    void setUp(TestContext context) {
        this.context = context;
    }

    @Test
    @DisplayName("When scanning a Java library with a known vulnerability - a 'Risky' verdict should be returned and a notification should be sent")
    void javaLibWithVulnerability() {
        given(context)
            .ofJavaLibrary()
            .withKnownVulnerability();

        when(context).runScan();

        then(context).response()
            .verdictShouldBe(Verdict.RISKY)
            .reasonShouldContain("Known vulnerability");
        then(context).notification()
            .shouldBeSent()
            .containingText("Known vulnerability");
    }

    @Test
    @DisplayName("When scanning a Java library without any known vulnerability - a 'Safe' verdict should be returned without any notification")
    void javaLibWithNoVulnerabilities() {
        given(context)
            .ofJavaLibrary()
            .withoutVulnerabilities();

        when(context).runScan();

        then(context).response()
                .verdictShouldBe(Verdict.SAFE);
        then(context).notification()
                .shouldNotBeSent();
    }

}
